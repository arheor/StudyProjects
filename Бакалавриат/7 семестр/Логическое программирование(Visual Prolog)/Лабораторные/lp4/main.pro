% Copyright

implement main
    open core, console, math, string

%задача 34,1-----------------------------------------------------+
%Вывести на экран все двухзначные числа, произведение цифр которых равно 18.

%class predicates
%     proiz: (unsigned).
%
%clauses
%    proiz(100) :- !.
%    proiz(N) :- (N mod 10) * (N div 10) = 18, write(N), nl, !, proiz(N + 1).
%    proiz(N) :- proiz(N + 1).
%
%    run() :-
%        proiz(10),
%        _ = readline().

        %задача 34,2-------------------------------------------------+
%Написать функцию Аккермана.

%class predicates
%    ack: (unsigned, unsigned) -> unsigned.
%
%clauses
%    ack(0, Y) = Y + 1 :- !.
%    ack(X, 0) = ack(X-1, 1) :- !.
%    ack(X, Y) = ack(X-1, ack(X, Y-1)).
%
%    run() :-
%        write(ack(3,8)),
%        _=readLine().

      %задача 34,9-------------------------------------------------+
%Разработать функцию для нахождения суммы ряда:

%class predicates
%    f:(unsigned, % счетчик
%    real, % аккумулятор
%    real, % последний член ряда
%    real,
%    unsigned) % оставшееся число членов ряда
%    -> real.
%
%clauses
%    f(_,Аккум,_,_,0) = Аккум :- !.
%    f(Счетчик,Аккум,Член,X,N) = f(Счетчик+1,Аккум+Член1,Член1,X,N-1) :- Член1 = Член * X / Счетчик.
%
%    run() :-
%        Сумма = f(1,1,1,0.7,10),
%        Е = e^0.7,
%        writef(
%        @"Сумма ряда = %
%        e^x = %
%        Разность = %",Сумма,Е,abs(Сумма-Е)),
%        _ = readline().

% Задание 34.17. -----------------------------------------------------+
%Написать предикат перевода чисел из десятичной системы счисления в двоичную.

%class predicates
%    перевод_10_2:(unsigned,string, string[out]) determ.
%
%clauses
%    перевод_10_2(X,O,O) :- X = 0, !.
%    перевод_10_2(X,Y,O) :-  перевод_10_2(X div 2, concat(toString(X mod 2),Y),O).
%
%    run() :-
%        X = read(),
%        перевод_10_2(X,"",O),
%        write(O),clearInput,!,_=readline();
%        _ = readline().

% Задание 34.21. -----------------------------------------------------+
%Разработать программу определения палиндрома на основе другого
%способа — получить реверс исходной строки и сравнить эти строки между собой.

%class predicates
%    удалить_пробелы : (string, string, string [out]).
%    реверс : (unsigned,string,string,string[out]) determ.
%
%clauses
%    удалить_пробелы(Фраза,Аккум,Фраза1) :- frontToken(Фраза,Слово,Остаток),!,
%        удалить_пробелы(Остаток,concat(Аккум,Слово),Фраза1).
%    удалить_пробелы(_,Аккум,Аккум).
%    реверс(Длина,_,S,S) :- Длина <= 0,!.
%    реверс(Длина,Фраза,Аккум,S) :- front(Фраза,1,Первая,Ост),% отрезаем первую букву
%         реверс(Длина-1,Ост,concat(Первая,Аккум),S).
%
%    run() :-
%        Фраза = "А роза упала на лапу Азора",
%        Фраза1 = toLowerCase(Фраза),
%        удалить_пробелы(Фраза1,"",Фраза2),
%        Длина = length(Фраза2) div 1,
%        (реверс(Длина,Фраза2,"",Аккум),Фраза2 = Аккум,write("Палиндром"),!;
%        write("Не палиндром")),
%        _ = readline().


%---------------------------------------------------------------------+
%Задание 34.12. Описать операцию вычитания целых неотрицательных чисел произвольной разрядности.

domains
    заем = [0..1]. % значение переноса 0 или 1

class predicates
    вычитание:(string, string, string [out]).
    вычесть:(string, string, заем, charCount, string, string [out]).

clauses
    вычитание(Аргумент1,Аргумент2,Разность) :-
    Длина1 = length(Аргумент1),
    Длина2 = length(Аргумент2),
    Длина = max(Длина1,Длина2),
    (
    Длина1 > Длина2,!,
    Аргумент22=adjustRight(Аргумент2,Длина,"0"),
    вычесть(Аргумент1,Аргумент22,0,Длина,"",Разность);
    Длина1 < Длина2,!,
    Аргумент11=adjustRight(Аргумент1,Длина,"0"),
    вычесть(Аргумент2,Аргумент11,0,Длина,"",Разность1),
    Разность=concat("-",Разность1);
    Аргумент1 < Аргумент2,!,
    вычесть(Аргумент2,Аргумент1,0,Длина,"",Разность1),
    Разность=concat("-",Разность1);
    вычесть(Аргумент1,Аргумент2,0,Длина,"",Разность)
    ).

    вычесть(_,_,0,0,Разность,Разность):-!.
    вычесть(Число1,_,1,0,Аккум,Разность):-!,А = toTerm(Число1), Разность=concat(toString(А-1),Аккум).

    вычесть(Число1,Число2,Заем,Длина,Аккум,Разность):-
    Длина1 = Длина-1,
    front(Число1,Длина1,Ост1,Цифра1),
    front(Число2,Длина1,Ост2,Цифра2),
    А = toTerm(Цифра1),
    Б = toTerm(Цифра2),
    А1 = А - Заем,
    (А1 < Б,!,Цифра = А1 + 10 - Б, Заем1 = 1,
    Аккум1 = concat(toString(Цифра),Аккум),
    вычесть(Ост1,Ост2,Заем1,Длина1,Аккум1,Разность) ;
    Заем1 = 0,
    Цифра = А-Б-Заем,
    Аккум1 = concat(toString(Цифра),Аккум),
    вычесть(Ост1,Ост2,Заем1,Длина1,Аккум1,Разность)).

    clauses
    run() :-
        Аргумент1 = "2345",
        Аргумент2 = "2345",
        вычитание(Аргумент1,Аргумент2,Разность),
        write(Разность),
        _ = readline().

end implement main

goal
    console::run(main::run).
